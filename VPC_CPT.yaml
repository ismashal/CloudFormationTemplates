---
Description: Setup VPC.

Parameters:

 EnvironmentNumber:
    Description: Number [1-255] of environment. Note this will be used to define the second octect of your VPC CIDR.
    Type: String

Mappings:
  AWSSubnets:
    private: 
      "0": "4.0/24"
      "1": "5.0/24"
    public:
      "0": "8.0/24"
      "1": "9.0/24"

Resources:

  MainVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Join ['.', [ 10, !Ref EnvironmentNumber, 0, 0/16]]
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Join ['-', ['VPC', !Ref 'AWS::StackName']]
  

######################################################
####                 SUBNETS                      ####
######################################################

# http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html

  PRIVATE0Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MainVPC
     # MapPublicIpOnLaunch: true
      CidrBlock: !Sub
        - 10.${MyEnvironment}.${MySubnet}
        - { MyEnvironment: !Ref EnvironmentNumber, MySubnet: !FindInMap [ AWSSubnets, private, 0 ]}
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: !Join ['-', ['PRIVATE', !Ref 'AWS::StackName']]
        - Key: Network
          Value: Private

  PRIVATE1Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MainVPC
    #  MapPublicIpOnLaunch: true
      CidrBlock: !Sub
        - 10.${MyEnvironment}.${MySubnet}
        - { MyEnvironment: !Ref EnvironmentNumber, MySubnet: !FindInMap [ AWSSubnets, private, 1 ]}
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: !Join ['-', ['PRIVATE', !Ref 'AWS::StackName']]
        - Key: Network
          Value: Private

  PUBLIC0Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MainVPC
      MapPublicIpOnLaunch: true
      CidrBlock: !Sub
        - 10.${MyEnvironment}.${MySubnet}
        - { MyEnvironment: !Ref EnvironmentNumber, MySubnet: !FindInMap [ AWSSubnets, public, 0 ]}
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: !Join ['-', ['PUBLIC', !Ref 'AWS::StackName']]
        - Key: Network
          Value: Public

  PUBLIC1Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MainVPC
      MapPublicIpOnLaunch: true
      CidrBlock: !Sub
        - 10.${MyEnvironment}.${MySubnet}
        - { MyEnvironment: !Ref EnvironmentNumber, MySubnet: !FindInMap [ AWSSubnets, public, 1 ]}
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: !Join ['-', ['PUBLIC', !Ref 'AWS::StackName']]
        - Key: Network
          Value: Public


######################################################
####                 ROUTE TABLES                 ####
######################################################

# http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route-table.html

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MainVPC
      Tags:
        - Key: Name
          Value: !Join ['-', ['PrivateRouteTable', !Ref 'AWS::StackName']]
          
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MainVPC
      Tags:
        - Key: Name
          Value: !Join ['-', ['PublicRouteTable', !Ref 'AWS::StackName']]

####                 Internet Gateway                ####
# http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html
  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties: {}
    
####                 Attach Internet Gateway to VPC             ####
# http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MainVPC
      InternetGatewayId: !Ref InternetGateway

####                 Attach Internet Gateway to public route table         ####
# http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

####       Create Nat Gateway         ####

  NATGateway:
   Type: AWS::EC2::NatGateway
   Properties:
      AllocationId:
         Fn::GetAtt:
         - EIP
         - AllocationId
      SubnetId: !Ref PUBLIC0Subnet # This subnet should follow in creating public/shared resource 

  EIP:
    DependsOn: AttachGateway
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway

######################################################
####       ATTACH ROUTE TABLES TO SUBNETS         ####
######################################################  

# http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html

  Private0SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PRIVATE0Subnet
  
  PRIVATE1SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PRIVATE1Subnet

  PUBLIC0SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PUBLIC0Subnet
      
  PUBLIC1SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PUBLIC1Subnet 

######################################################
####             Outputs                          ####
######################################################  

Outputs:
  MainVPC:
    Description: VPC Created
    Value: !Ref MainVPC
    Export:
      Name: !Join ['-', [!Ref 'AWS::StackName', 'VpcId']]

## PRIVATE SUBNETS

  # Private0Subnet:
    # Description: 'Private Subnet 0'
    # Value: !Sub
      # - 10.${MyEnvironment}.${MySubnet}
      # - { MyEnvironment: !Ref EnvironmentNumber, MySubnet: !FindInMap [ AWSSubnets, Private, 0 ]}
    # Export:
      # Name: !Join ['-', [!Ref 'AWS::StackName', 'PRIVATE0Subnet']]

  # Private1Subnet:
    # Description: 'Private Subnet 1'
    # Value: !Sub
      # - 10.${MyEnvironment}.${MySubnet}
      # - { MyEnvironment: !Ref EnvironmentNumber, MySubnet: !FindInMap [ AWSSubnets, Private, 1 ]}
    # Export:
      # Name: !Join ['-', [!Ref 'AWS::StackName', 'PRIVATE1Subnet']]

  # Private0SubnetId:
    # Description: 'Private Subnet 0 ID'
    # Value: !Ref PRIVATE0Subnet
    # Export:
      # Name: !Join ['-', [!Ref 'AWS::StackName', 'PRIVATE0SubnetID']]

  # Private1SubnetId:
    # Description: 'Private Subnet 1 ID'
    # Value: !Ref PRIVATE1Subnet
    # Export:
      # Name: !Join ['-', [!Ref 'AWS::StackName', 'PRIVATE1SubnetId']]

# PUBLIC Subnets

  # Public0Subnet:
    # Description: 'Public Subnet 0'
    # Value: !Sub
      # - 10.${MyEnvironment}.${MySubnet}
      # - { MyEnvironment: !Ref EnvironmentNumber, MySubnet: !FindInMap [ AWSSubnets, Public, 0 ]}
    # Export:
      # Name: !Join ['-', [!Ref 'AWS::StackName', 'PUBLIC0Subnet']]

  # Public1Subnet:
    # Description: 'Public Subnet 1'
    # Value: !Sub
      # - 10.${MyEnvironment}.${MySubnet}
      # - { MyEnvironment: !Ref EnvironmentNumber, MySubnet: !FindInMap [ AWSSubnets, Public, 1 ]}
    # Export:
      # Name: !Join ['-', [!Ref 'AWS::StackName', 'PUBLIC1Subnet']]

  # Public0SubnetId:
    # Description: 'Public Subnet 0 ID'
    # Value: !Ref PUBLIC0Subnet
    # Export:
      # Name: !Join ['-', [!Ref 'AWS::StackName', 'PUBLIC0SubnetID']]

  # Public1SubnetId:
    # Description: 'Public Subnet 1 ID'
    # Value: !Ref PUBLIC1Subnet
    # Export:
      # Name: !Join ['-', [!Ref 'AWS::StackName', 'PUBLIC1SubnetId']]
      


